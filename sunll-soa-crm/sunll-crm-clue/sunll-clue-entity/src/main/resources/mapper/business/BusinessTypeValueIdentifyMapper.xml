<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.sunll.clue.dao.business.BusinessTypeValueIdentifyMapper">
    <resultMap id="BaseResultMap" type="com.sunll.clue.entity.business.BusinessTypeValueIdentify">
        <!--          -->
        <id column="id" jdbcType="VARCHAR" property="id"/>
        <result column="user_id" jdbcType="INTEGER" property="userId"/>
        <result column="business_type_id" jdbcType="INTEGER" property="businessTypeId"/>
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime"/>
        <result column="update_user_id" jdbcType="INTEGER" property="updateUserId"/>
        <result column="update_time" jdbcType="TIMESTAMP" property="updateTime"/>
        <result column="is_del" jdbcType="INTEGER" property="isDel"/>
        <result column="create_user_id" jdbcType="INTEGER" property="createUserId"/>
    </resultMap>
    <sql id="Example_Where_Clause">
        <!--          -->
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <!--          -->
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
        <!--          -->
        id, user_id, business_type_id, create_time, update_user_id, update_time, is_del,
        create_user_id
    </sql>
    <select id="selectByExample" parameterType="com.sunll.clue.entity.business.BusinessTypeValueIdentifyExample"
            resultMap="BaseResultMap">
        <!--          -->
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        from business_type_value_identify
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
        <!--          -->
        select
        <include refid="Base_Column_List"/>
        from business_type_value_identify
        where id = #{id,jdbcType=VARCHAR}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
        <!--          -->
        delete from business_type_value_identify
        where id = #{id,jdbcType=VARCHAR}
    </delete>
    <delete id="deleteByExample" parameterType="com.sunll.clue.entity.business.BusinessTypeValueIdentifyExample">
        <!--          -->
        delete from business_type_value_identify
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </delete>
    <insert id="insert" parameterType="com.sunll.clue.entity.business.BusinessTypeValueIdentify">
    insert into business_type_value_identify (id,user_id, business_type_id, create_time,
      update_user_id, update_time, is_del, 
      create_user_id)
    values (#{id,jdbcType=VARCHAR},#{userId,jdbcType=INTEGER}, #{businessTypeId,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP},
      #{updateUserId,jdbcType=INTEGER}, #{updateTime,jdbcType=TIMESTAMP}, #{isDel,jdbcType=INTEGER}, 
      #{createUserId,jdbcType=INTEGER})
  </insert>
    <insert id="insertSelective" parameterType="com.sunll.clue.entity.business.BusinessTypeValueIdentify">
        <!--          -->
        <selectKey keyProperty="id" order="AFTER" resultType="java.lang.String">
            SELECT LAST_INSERT_ID()
        </selectKey>
        insert into business_type_value_identify
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="userId != null">
                user_id,
            </if>
            <if test="businessTypeId != null">
                business_type_id,
            </if>
            <if test="createTime != null">
                create_time,
            </if>
            <if test="updateUserId != null">
                update_user_id,
            </if>
            <if test="updateTime != null">
                update_time,
            </if>
            <if test="isDel != null">
                is_del,
            </if>
            <if test="createUserId != null">
                create_user_id,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="userId != null">
                #{userId,jdbcType=INTEGER},
            </if>
            <if test="businessTypeId != null">
                #{businessTypeId,jdbcType=INTEGER},
            </if>
            <if test="createTime != null">
                #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateUserId != null">
                #{updateUserId,jdbcType=INTEGER},
            </if>
            <if test="updateTime != null">
                #{updateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="isDel != null">
                #{isDel,jdbcType=INTEGER},
            </if>
            <if test="createUserId != null">
                #{createUserId,jdbcType=INTEGER},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="com.sunll.clue.entity.business.BusinessTypeValueIdentifyExample"
            resultType="java.lang.Long">
        <!--          -->
        select count(*) from business_type_value_identify
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        <!--          -->
        update business_type_value_identify
        <set>
            <if test="record.id != null">
                id = #{record.id,jdbcType=VARCHAR},
            </if>
            <if test="record.userId != null">
                user_id = #{record.userId,jdbcType=INTEGER},
            </if>
            <if test="record.businessTypeId != null">
                business_type_id = #{record.businessTypeId,jdbcType=INTEGER},
            </if>
            <if test="record.createTime != null">
                create_time = #{record.createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="record.updateUserId != null">
                update_user_id = #{record.updateUserId,jdbcType=INTEGER},
            </if>
            <if test="record.updateTime != null">
                update_time = #{record.updateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="record.isDel != null">
                is_del = #{record.isDel,jdbcType=INTEGER},
            </if>
            <if test="record.createUserId != null">
                create_user_id = #{record.createUserId,jdbcType=INTEGER},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        <!--          -->
        update business_type_value_identify
        set id = #{record.id,jdbcType=VARCHAR},
        user_id = #{record.userId,jdbcType=INTEGER},
        business_type_id = #{record.businessTypeId,jdbcType=INTEGER},
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
        update_user_id = #{record.updateUserId,jdbcType=INTEGER},
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
        is_del = #{record.isDel,jdbcType=INTEGER},
        create_user_id = #{record.createUserId,jdbcType=INTEGER}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="com.sunll.clue.entity.business.BusinessTypeValueIdentify">
        <!--          -->
        update business_type_value_identify
        <set>
            <if test="userId != null">
                user_id = #{userId,jdbcType=INTEGER},
            </if>
            <if test="businessTypeId != null">
                business_type_id = #{businessTypeId,jdbcType=INTEGER},
            </if>
            <if test="createTime != null">
                create_time = #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateUserId != null">
                update_user_id = #{updateUserId,jdbcType=INTEGER},
            </if>
            <if test="updateTime != null">
                update_time = #{updateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="isDel != null">
                is_del = #{isDel,jdbcType=INTEGER},
            </if>
            <if test="createUserId != null">
                create_user_id = #{createUserId,jdbcType=INTEGER},
            </if>
        </set>
        where id = #{id,jdbcType=VARCHAR}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.sunll.clue.entity.business.BusinessTypeValueIdentify">
        <!--          -->
        update business_type_value_identify
        set user_id = #{userId,jdbcType=INTEGER},
        business_type_id = #{businessTypeId,jdbcType=INTEGER},
        create_time = #{createTime,jdbcType=TIMESTAMP},
        update_user_id = #{updateUserId,jdbcType=INTEGER},
        update_time = #{updateTime,jdbcType=TIMESTAMP},
        is_del = #{isDel,jdbcType=INTEGER},
        create_user_id = #{createUserId,jdbcType=INTEGER}
        where id = #{id,jdbcType=VARCHAR}
    </update>

    <update id="delByIds" parameterType="java.util.List">
        <!--          -->
        update business_type_value_identify
        set is_del = 2
        where id IN
        <foreach close=")" collection="list" item="item" open="("
                 separator=",">
            #{item}
        </foreach>
    </update>
</mapper>