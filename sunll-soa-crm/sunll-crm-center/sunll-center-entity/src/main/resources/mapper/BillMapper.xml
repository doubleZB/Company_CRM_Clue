<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.sunll.center.mapper.BillMapper">
  <resultMap id="BaseResultMap" type="com.sunll.center.entity.Bill">
    <!--          -->
    <result column="account_id" jdbcType="INTEGER" property="accountId" />
    <result column="account_phone" jdbcType="VARCHAR" property="accountPhone" />
    <result column="caller_id_number" jdbcType="VARCHAR" property="callerIdNumber" />
    <result column="destination_number" jdbcType="VARCHAR" property="destinationNumber" />
    <result column="ori_caller" jdbcType="VARCHAR" property="oriCaller" />
    <result column="ori_destination" jdbcType="VARCHAR" property="oriDestination" />
    <result column="start_stamp" jdbcType="TIMESTAMP" property="startStamp" />
    <result column="answer_stamp" jdbcType="TIMESTAMP" property="answerStamp" />
    <result column="end_stamp" jdbcType="TIMESTAMP" property="endStamp" />
    <result column="billsec" jdbcType="INTEGER" property="billsec" />
    <result column="rate" jdbcType="DOUBLE" property="rate" />
    <result column="increment" jdbcType="INTEGER" property="increment" />
    <result column="fee" jdbcType="DOUBLE" property="fee" />
    <result column="is_toll" jdbcType="TINYINT" property="isToll" />
    <result column="billtype" jdbcType="INTEGER" property="billtype" />
    <result column="direction" jdbcType="TINYINT" property="direction" />
    <result column="cost_rate" jdbcType="REAL" property="costRate" />
    <result column="cost_unit" jdbcType="INTEGER" property="costUnit" />
    <result column="cost_fee" jdbcType="REAL" property="costFee" />
    <result column="gatewayid" jdbcType="INTEGER" property="gatewayid" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--          -->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--          -->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--          -->
    account_id, account_phone, caller_id_number, destination_number, ori_caller, ori_destination, 
    start_stamp, answer_stamp, end_stamp, billsec, rate, increment, fee, is_toll, billtype, 
    direction, cost_rate, cost_unit, cost_fee, gatewayid
  </sql>
  <select id="selectByExample" parameterType="com.sunll.center.entity.BillExample" resultMap="BaseResultMap">
    <!--          -->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from bill
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="com.sunll.center.entity.BillExample">
    <!--          -->
    delete from bill
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.sunll.center.entity.Bill">
    <!--          -->
    insert into bill (account_id, account_phone, caller_id_number, 
      destination_number, ori_caller, ori_destination, 
      start_stamp, answer_stamp, end_stamp, 
      billsec, rate, increment, 
      fee, is_toll, billtype, 
      direction, cost_rate, cost_unit, 
      cost_fee, gatewayid)
    values (#{accountId,jdbcType=INTEGER}, #{accountPhone,jdbcType=VARCHAR}, #{callerIdNumber,jdbcType=VARCHAR}, 
      #{destinationNumber,jdbcType=VARCHAR}, #{oriCaller,jdbcType=VARCHAR}, #{oriDestination,jdbcType=VARCHAR}, 
      #{startStamp,jdbcType=TIMESTAMP}, #{answerStamp,jdbcType=TIMESTAMP}, #{endStamp,jdbcType=TIMESTAMP}, 
      #{billsec,jdbcType=INTEGER}, #{rate,jdbcType=DOUBLE}, #{increment,jdbcType=INTEGER}, 
      #{fee,jdbcType=DOUBLE}, #{isToll,jdbcType=TINYINT}, #{billtype,jdbcType=INTEGER}, 
      #{direction,jdbcType=TINYINT}, #{costRate,jdbcType=REAL}, #{costUnit,jdbcType=INTEGER}, 
      #{costFee,jdbcType=REAL}, #{gatewayid,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.sunll.center.entity.Bill">
    <!--          -->
    insert into bill
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="accountId != null">
        account_id,
      </if>
      <if test="accountPhone != null">
        account_phone,
      </if>
      <if test="callerIdNumber != null">
        caller_id_number,
      </if>
      <if test="destinationNumber != null">
        destination_number,
      </if>
      <if test="oriCaller != null">
        ori_caller,
      </if>
      <if test="oriDestination != null">
        ori_destination,
      </if>
      <if test="startStamp != null">
        start_stamp,
      </if>
      <if test="answerStamp != null">
        answer_stamp,
      </if>
      <if test="endStamp != null">
        end_stamp,
      </if>
      <if test="billsec != null">
        billsec,
      </if>
      <if test="rate != null">
        rate,
      </if>
      <if test="increment != null">
        increment,
      </if>
      <if test="fee != null">
        fee,
      </if>
      <if test="isToll != null">
        is_toll,
      </if>
      <if test="billtype != null">
        billtype,
      </if>
      <if test="direction != null">
        direction,
      </if>
      <if test="costRate != null">
        cost_rate,
      </if>
      <if test="costUnit != null">
        cost_unit,
      </if>
      <if test="costFee != null">
        cost_fee,
      </if>
      <if test="gatewayid != null">
        gatewayid,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="accountId != null">
        #{accountId,jdbcType=INTEGER},
      </if>
      <if test="accountPhone != null">
        #{accountPhone,jdbcType=VARCHAR},
      </if>
      <if test="callerIdNumber != null">
        #{callerIdNumber,jdbcType=VARCHAR},
      </if>
      <if test="destinationNumber != null">
        #{destinationNumber,jdbcType=VARCHAR},
      </if>
      <if test="oriCaller != null">
        #{oriCaller,jdbcType=VARCHAR},
      </if>
      <if test="oriDestination != null">
        #{oriDestination,jdbcType=VARCHAR},
      </if>
      <if test="startStamp != null">
        #{startStamp,jdbcType=TIMESTAMP},
      </if>
      <if test="answerStamp != null">
        #{answerStamp,jdbcType=TIMESTAMP},
      </if>
      <if test="endStamp != null">
        #{endStamp,jdbcType=TIMESTAMP},
      </if>
      <if test="billsec != null">
        #{billsec,jdbcType=INTEGER},
      </if>
      <if test="rate != null">
        #{rate,jdbcType=DOUBLE},
      </if>
      <if test="increment != null">
        #{increment,jdbcType=INTEGER},
      </if>
      <if test="fee != null">
        #{fee,jdbcType=DOUBLE},
      </if>
      <if test="isToll != null">
        #{isToll,jdbcType=TINYINT},
      </if>
      <if test="billtype != null">
        #{billtype,jdbcType=INTEGER},
      </if>
      <if test="direction != null">
        #{direction,jdbcType=TINYINT},
      </if>
      <if test="costRate != null">
        #{costRate,jdbcType=REAL},
      </if>
      <if test="costUnit != null">
        #{costUnit,jdbcType=INTEGER},
      </if>
      <if test="costFee != null">
        #{costFee,jdbcType=REAL},
      </if>
      <if test="gatewayid != null">
        #{gatewayid,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.sunll.center.entity.BillExample" resultType="java.lang.Long">
    <!--          -->
    select count(*) from bill
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    <!--          -->
    update bill
    <set>
      <if test="record.accountId != null">
        account_id = #{record.accountId,jdbcType=INTEGER},
      </if>
      <if test="record.accountPhone != null">
        account_phone = #{record.accountPhone,jdbcType=VARCHAR},
      </if>
      <if test="record.callerIdNumber != null">
        caller_id_number = #{record.callerIdNumber,jdbcType=VARCHAR},
      </if>
      <if test="record.destinationNumber != null">
        destination_number = #{record.destinationNumber,jdbcType=VARCHAR},
      </if>
      <if test="record.oriCaller != null">
        ori_caller = #{record.oriCaller,jdbcType=VARCHAR},
      </if>
      <if test="record.oriDestination != null">
        ori_destination = #{record.oriDestination,jdbcType=VARCHAR},
      </if>
      <if test="record.startStamp != null">
        start_stamp = #{record.startStamp,jdbcType=TIMESTAMP},
      </if>
      <if test="record.answerStamp != null">
        answer_stamp = #{record.answerStamp,jdbcType=TIMESTAMP},
      </if>
      <if test="record.endStamp != null">
        end_stamp = #{record.endStamp,jdbcType=TIMESTAMP},
      </if>
      <if test="record.billsec != null">
        billsec = #{record.billsec,jdbcType=INTEGER},
      </if>
      <if test="record.rate != null">
        rate = #{record.rate,jdbcType=DOUBLE},
      </if>
      <if test="record.increment != null">
        increment = #{record.increment,jdbcType=INTEGER},
      </if>
      <if test="record.fee != null">
        fee = #{record.fee,jdbcType=DOUBLE},
      </if>
      <if test="record.isToll != null">
        is_toll = #{record.isToll,jdbcType=TINYINT},
      </if>
      <if test="record.billtype != null">
        billtype = #{record.billtype,jdbcType=INTEGER},
      </if>
      <if test="record.direction != null">
        direction = #{record.direction,jdbcType=TINYINT},
      </if>
      <if test="record.costRate != null">
        cost_rate = #{record.costRate,jdbcType=REAL},
      </if>
      <if test="record.costUnit != null">
        cost_unit = #{record.costUnit,jdbcType=INTEGER},
      </if>
      <if test="record.costFee != null">
        cost_fee = #{record.costFee,jdbcType=REAL},
      </if>
      <if test="record.gatewayid != null">
        gatewayid = #{record.gatewayid,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!--          -->
    update bill
    set account_id = #{record.accountId,jdbcType=INTEGER},
      account_phone = #{record.accountPhone,jdbcType=VARCHAR},
      caller_id_number = #{record.callerIdNumber,jdbcType=VARCHAR},
      destination_number = #{record.destinationNumber,jdbcType=VARCHAR},
      ori_caller = #{record.oriCaller,jdbcType=VARCHAR},
      ori_destination = #{record.oriDestination,jdbcType=VARCHAR},
      start_stamp = #{record.startStamp,jdbcType=TIMESTAMP},
      answer_stamp = #{record.answerStamp,jdbcType=TIMESTAMP},
      end_stamp = #{record.endStamp,jdbcType=TIMESTAMP},
      billsec = #{record.billsec,jdbcType=INTEGER},
      rate = #{record.rate,jdbcType=DOUBLE},
      increment = #{record.increment,jdbcType=INTEGER},
      fee = #{record.fee,jdbcType=DOUBLE},
      is_toll = #{record.isToll,jdbcType=TINYINT},
      billtype = #{record.billtype,jdbcType=INTEGER},
      direction = #{record.direction,jdbcType=TINYINT},
      cost_rate = #{record.costRate,jdbcType=REAL},
      cost_unit = #{record.costUnit,jdbcType=INTEGER},
      cost_fee = #{record.costFee,jdbcType=REAL},
      gatewayid = #{record.gatewayid,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
</mapper>