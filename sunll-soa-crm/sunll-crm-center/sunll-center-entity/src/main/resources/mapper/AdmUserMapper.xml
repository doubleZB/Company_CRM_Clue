<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.sunll.center.mapper.AdmUserMapper">
  <resultMap id="BaseResultMap" type="com.sunll.center.entity.AdmUser">
    <!--          -->
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="account" jdbcType="VARCHAR" property="account" />
    <result column="nickname" jdbcType="VARCHAR" property="nickname" />
    <result column="password" jdbcType="CHAR" property="password" />
    <result column="bind_account" jdbcType="INTEGER" property="bindAccount" />
    <result column="bind_partner" jdbcType="INTEGER" property="bindPartner" />
    <result column="last_login_time" jdbcType="INTEGER" property="lastLoginTime" />
    <result column="last_login_ip" jdbcType="VARCHAR" property="lastLoginIp" />
    <result column="login_count" jdbcType="INTEGER" property="loginCount" />
    <result column="verify" jdbcType="VARCHAR" property="verify" />
    <result column="email" jdbcType="VARCHAR" property="email" />
    <result column="remark" jdbcType="VARCHAR" property="remark" />
    <result column="create_time" jdbcType="INTEGER" property="createTime" />
    <result column="update_time" jdbcType="INTEGER" property="updateTime" />
    <result column="status" jdbcType="BIT" property="status" />
    <result column="type_id" jdbcType="TINYINT" property="typeId" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.sunll.center.entity.AdmUser">
    <!--          -->
    <result column="info" jdbcType="LONGVARCHAR" property="info" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--          -->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--          -->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--          -->
    id, account, nickname, password, bind_account, bind_partner, last_login_time, last_login_ip, 
    login_count, verify, email, remark, create_time, update_time, status, type_id
  </sql>
  <sql id="Blob_Column_List">
    <!--          -->
    info
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="com.sunll.center.entity.AdmUserExample" resultMap="ResultMapWithBLOBs">
    <!--          -->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from adm_user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="com.sunll.center.entity.AdmUserExample" resultMap="BaseResultMap">
    <!--          -->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from adm_user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
    <!--          -->
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from adm_user
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    <!--          -->
    delete from adm_user
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.sunll.center.entity.AdmUserExample">
    <!--          -->
    delete from adm_user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.sunll.center.entity.AdmUser">
    <!--          -->
    insert into adm_user (id, account, nickname, 
      password, bind_account, bind_partner, 
      last_login_time, last_login_ip, login_count, 
      verify, email, remark, 
      create_time, update_time, status, 
      type_id, info)
    values (#{id,jdbcType=INTEGER}, #{account,jdbcType=VARCHAR}, #{nickname,jdbcType=VARCHAR}, 
      #{password,jdbcType=CHAR}, #{bindAccount,jdbcType=INTEGER}, #{bindPartner,jdbcType=INTEGER}, 
      #{lastLoginTime,jdbcType=INTEGER}, #{lastLoginIp,jdbcType=VARCHAR}, #{loginCount,jdbcType=INTEGER}, 
      #{verify,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR}, #{remark,jdbcType=VARCHAR}, 
      #{createTime,jdbcType=INTEGER}, #{updateTime,jdbcType=INTEGER}, #{status,jdbcType=BIT}, 
      #{typeId,jdbcType=TINYINT}, #{info,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.sunll.center.entity.AdmUser">
    <!--          -->
    insert into adm_user
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="account != null">
        account,
      </if>
      <if test="nickname != null">
        nickname,
      </if>
      <if test="password != null">
        password,
      </if>
      <if test="bindAccount != null">
        bind_account,
      </if>
      <if test="bindPartner != null">
        bind_partner,
      </if>
      <if test="lastLoginTime != null">
        last_login_time,
      </if>
      <if test="lastLoginIp != null">
        last_login_ip,
      </if>
      <if test="loginCount != null">
        login_count,
      </if>
      <if test="verify != null">
        verify,
      </if>
      <if test="email != null">
        email,
      </if>
      <if test="remark != null">
        remark,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="typeId != null">
        type_id,
      </if>
      <if test="info != null">
        info,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="account != null">
        #{account,jdbcType=VARCHAR},
      </if>
      <if test="nickname != null">
        #{nickname,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        #{password,jdbcType=CHAR},
      </if>
      <if test="bindAccount != null">
        #{bindAccount,jdbcType=INTEGER},
      </if>
      <if test="bindPartner != null">
        #{bindPartner,jdbcType=INTEGER},
      </if>
      <if test="lastLoginTime != null">
        #{lastLoginTime,jdbcType=INTEGER},
      </if>
      <if test="lastLoginIp != null">
        #{lastLoginIp,jdbcType=VARCHAR},
      </if>
      <if test="loginCount != null">
        #{loginCount,jdbcType=INTEGER},
      </if>
      <if test="verify != null">
        #{verify,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="remark != null">
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=INTEGER},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        #{status,jdbcType=BIT},
      </if>
      <if test="typeId != null">
        #{typeId,jdbcType=TINYINT},
      </if>
      <if test="info != null">
        #{info,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.sunll.center.entity.AdmUserExample" resultType="java.lang.Long">
    <!--          -->
    select count(*) from adm_user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    <!--          -->
    update adm_user
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.account != null">
        account = #{record.account,jdbcType=VARCHAR},
      </if>
      <if test="record.nickname != null">
        nickname = #{record.nickname,jdbcType=VARCHAR},
      </if>
      <if test="record.password != null">
        password = #{record.password,jdbcType=CHAR},
      </if>
      <if test="record.bindAccount != null">
        bind_account = #{record.bindAccount,jdbcType=INTEGER},
      </if>
      <if test="record.bindPartner != null">
        bind_partner = #{record.bindPartner,jdbcType=INTEGER},
      </if>
      <if test="record.lastLoginTime != null">
        last_login_time = #{record.lastLoginTime,jdbcType=INTEGER},
      </if>
      <if test="record.lastLoginIp != null">
        last_login_ip = #{record.lastLoginIp,jdbcType=VARCHAR},
      </if>
      <if test="record.loginCount != null">
        login_count = #{record.loginCount,jdbcType=INTEGER},
      </if>
      <if test="record.verify != null">
        verify = #{record.verify,jdbcType=VARCHAR},
      </if>
      <if test="record.email != null">
        email = #{record.email,jdbcType=VARCHAR},
      </if>
      <if test="record.remark != null">
        remark = #{record.remark,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=INTEGER},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=INTEGER},
      </if>
      <if test="record.status != null">
        status = #{record.status,jdbcType=BIT},
      </if>
      <if test="record.typeId != null">
        type_id = #{record.typeId,jdbcType=TINYINT},
      </if>
      <if test="record.info != null">
        info = #{record.info,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    <!--          -->
    update adm_user
    set id = #{record.id,jdbcType=INTEGER},
      account = #{record.account,jdbcType=VARCHAR},
      nickname = #{record.nickname,jdbcType=VARCHAR},
      password = #{record.password,jdbcType=CHAR},
      bind_account = #{record.bindAccount,jdbcType=INTEGER},
      bind_partner = #{record.bindPartner,jdbcType=INTEGER},
      last_login_time = #{record.lastLoginTime,jdbcType=INTEGER},
      last_login_ip = #{record.lastLoginIp,jdbcType=VARCHAR},
      login_count = #{record.loginCount,jdbcType=INTEGER},
      verify = #{record.verify,jdbcType=VARCHAR},
      email = #{record.email,jdbcType=VARCHAR},
      remark = #{record.remark,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=INTEGER},
      update_time = #{record.updateTime,jdbcType=INTEGER},
      status = #{record.status,jdbcType=BIT},
      type_id = #{record.typeId,jdbcType=TINYINT},
      info = #{record.info,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!--          -->
    update adm_user
    set id = #{record.id,jdbcType=INTEGER},
      account = #{record.account,jdbcType=VARCHAR},
      nickname = #{record.nickname,jdbcType=VARCHAR},
      password = #{record.password,jdbcType=CHAR},
      bind_account = #{record.bindAccount,jdbcType=INTEGER},
      bind_partner = #{record.bindPartner,jdbcType=INTEGER},
      last_login_time = #{record.lastLoginTime,jdbcType=INTEGER},
      last_login_ip = #{record.lastLoginIp,jdbcType=VARCHAR},
      login_count = #{record.loginCount,jdbcType=INTEGER},
      verify = #{record.verify,jdbcType=VARCHAR},
      email = #{record.email,jdbcType=VARCHAR},
      remark = #{record.remark,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=INTEGER},
      update_time = #{record.updateTime,jdbcType=INTEGER},
      status = #{record.status,jdbcType=BIT},
      type_id = #{record.typeId,jdbcType=TINYINT}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.sunll.center.entity.AdmUser">
    <!--          -->
    update adm_user
    <set>
      <if test="account != null">
        account = #{account,jdbcType=VARCHAR},
      </if>
      <if test="nickname != null">
        nickname = #{nickname,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        password = #{password,jdbcType=CHAR},
      </if>
      <if test="bindAccount != null">
        bind_account = #{bindAccount,jdbcType=INTEGER},
      </if>
      <if test="bindPartner != null">
        bind_partner = #{bindPartner,jdbcType=INTEGER},
      </if>
      <if test="lastLoginTime != null">
        last_login_time = #{lastLoginTime,jdbcType=INTEGER},
      </if>
      <if test="lastLoginIp != null">
        last_login_ip = #{lastLoginIp,jdbcType=VARCHAR},
      </if>
      <if test="loginCount != null">
        login_count = #{loginCount,jdbcType=INTEGER},
      </if>
      <if test="verify != null">
        verify = #{verify,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="remark != null">
        remark = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=INTEGER},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=BIT},
      </if>
      <if test="typeId != null">
        type_id = #{typeId,jdbcType=TINYINT},
      </if>
      <if test="info != null">
        info = #{info,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.sunll.center.entity.AdmUser">
    <!--          -->
    update adm_user
    set account = #{account,jdbcType=VARCHAR},
      nickname = #{nickname,jdbcType=VARCHAR},
      password = #{password,jdbcType=CHAR},
      bind_account = #{bindAccount,jdbcType=INTEGER},
      bind_partner = #{bindPartner,jdbcType=INTEGER},
      last_login_time = #{lastLoginTime,jdbcType=INTEGER},
      last_login_ip = #{lastLoginIp,jdbcType=VARCHAR},
      login_count = #{loginCount,jdbcType=INTEGER},
      verify = #{verify,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      remark = #{remark,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=INTEGER},
      update_time = #{updateTime,jdbcType=INTEGER},
      status = #{status,jdbcType=BIT},
      type_id = #{typeId,jdbcType=TINYINT},
      info = #{info,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.sunll.center.entity.AdmUser">
    <!--          -->
    update adm_user
    set account = #{account,jdbcType=VARCHAR},
      nickname = #{nickname,jdbcType=VARCHAR},
      password = #{password,jdbcType=CHAR},
      bind_account = #{bindAccount,jdbcType=INTEGER},
      bind_partner = #{bindPartner,jdbcType=INTEGER},
      last_login_time = #{lastLoginTime,jdbcType=INTEGER},
      last_login_ip = #{lastLoginIp,jdbcType=VARCHAR},
      login_count = #{loginCount,jdbcType=INTEGER},
      verify = #{verify,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      remark = #{remark,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=INTEGER},
      update_time = #{updateTime,jdbcType=INTEGER},
      status = #{status,jdbcType=BIT},
      type_id = #{typeId,jdbcType=TINYINT}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>