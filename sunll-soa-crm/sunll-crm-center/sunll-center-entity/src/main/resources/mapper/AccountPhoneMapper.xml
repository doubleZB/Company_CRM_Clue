<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.sunll.center.mapper.AccountPhoneMapper">
  <resultMap id="BaseResultMap" type="com.sunll.center.entity.AccountPhone">
    <!--          -->
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="phone" jdbcType="VARCHAR" property="phone" />
    <result column="fee" jdbcType="DECIMAL" property="fee" />
    <result column="status" jdbcType="TINYINT" property="status" />
    <result column="bind_account" jdbcType="INTEGER" property="bindAccount" />
    <result column="bind_flow" jdbcType="INTEGER" property="bindFlow" />
    <result column="bind_server" jdbcType="INTEGER" property="bindServer" />
    <result column="stime" jdbcType="INTEGER" property="stime" />
    <result column="etime" jdbcType="INTEGER" property="etime" />
    <result column="is_settle" jdbcType="TINYINT" property="isSettle" />
    <result column="ctime" jdbcType="INTEGER" property="ctime" />
    <result column="calloutprefix" jdbcType="VARCHAR" property="calloutprefix" />
    <result column="istransparent" jdbcType="TINYINT" property="istransparent" />
    <result column="transfercaller" jdbcType="VARCHAR" property="transfercaller" />
    <result column="charge_mode" jdbcType="TINYINT" property="chargeMode" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--          -->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--          -->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--          -->
    id, phone, fee, status, bind_account, bind_flow, bind_server, stime, etime, is_settle, 
    ctime, calloutprefix, istransparent, transfercaller, charge_mode
  </sql>
  <select id="selectByExample" parameterType="com.sunll.center.entity.AccountPhoneExample" resultMap="BaseResultMap">
    <!--          -->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from account_phone
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    <!--          -->
    select 
    <include refid="Base_Column_List" />
    from account_phone
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    <!--          -->
    delete from account_phone
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.sunll.center.entity.AccountPhoneExample">
    <!--          -->
    delete from account_phone
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.sunll.center.entity.AccountPhone">
    <!--          -->
    insert into account_phone (id, phone, fee, 
      status, bind_account, bind_flow, 
      bind_server, stime, etime, 
      is_settle, ctime, calloutprefix, 
      istransparent, transfercaller, charge_mode
      )
    values (#{id,jdbcType=INTEGER}, #{phone,jdbcType=VARCHAR}, #{fee,jdbcType=DECIMAL}, 
      #{status,jdbcType=TINYINT}, #{bindAccount,jdbcType=INTEGER}, #{bindFlow,jdbcType=INTEGER}, 
      #{bindServer,jdbcType=INTEGER}, #{stime,jdbcType=INTEGER}, #{etime,jdbcType=INTEGER}, 
      #{isSettle,jdbcType=TINYINT}, #{ctime,jdbcType=INTEGER}, #{calloutprefix,jdbcType=VARCHAR}, 
      #{istransparent,jdbcType=TINYINT}, #{transfercaller,jdbcType=VARCHAR}, #{chargeMode,jdbcType=TINYINT}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.sunll.center.entity.AccountPhone">
    <!--          -->
    insert into account_phone
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="phone != null">
        phone,
      </if>
      <if test="fee != null">
        fee,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="bindAccount != null">
        bind_account,
      </if>
      <if test="bindFlow != null">
        bind_flow,
      </if>
      <if test="bindServer != null">
        bind_server,
      </if>
      <if test="stime != null">
        stime,
      </if>
      <if test="etime != null">
        etime,
      </if>
      <if test="isSettle != null">
        is_settle,
      </if>
      <if test="ctime != null">
        ctime,
      </if>
      <if test="calloutprefix != null">
        calloutprefix,
      </if>
      <if test="istransparent != null">
        istransparent,
      </if>
      <if test="transfercaller != null">
        transfercaller,
      </if>
      <if test="chargeMode != null">
        charge_mode,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="phone != null">
        #{phone,jdbcType=VARCHAR},
      </if>
      <if test="fee != null">
        #{fee,jdbcType=DECIMAL},
      </if>
      <if test="status != null">
        #{status,jdbcType=TINYINT},
      </if>
      <if test="bindAccount != null">
        #{bindAccount,jdbcType=INTEGER},
      </if>
      <if test="bindFlow != null">
        #{bindFlow,jdbcType=INTEGER},
      </if>
      <if test="bindServer != null">
        #{bindServer,jdbcType=INTEGER},
      </if>
      <if test="stime != null">
        #{stime,jdbcType=INTEGER},
      </if>
      <if test="etime != null">
        #{etime,jdbcType=INTEGER},
      </if>
      <if test="isSettle != null">
        #{isSettle,jdbcType=TINYINT},
      </if>
      <if test="ctime != null">
        #{ctime,jdbcType=INTEGER},
      </if>
      <if test="calloutprefix != null">
        #{calloutprefix,jdbcType=VARCHAR},
      </if>
      <if test="istransparent != null">
        #{istransparent,jdbcType=TINYINT},
      </if>
      <if test="transfercaller != null">
        #{transfercaller,jdbcType=VARCHAR},
      </if>
      <if test="chargeMode != null">
        #{chargeMode,jdbcType=TINYINT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.sunll.center.entity.AccountPhoneExample" resultType="java.lang.Long">
    <!--          -->
    select count(*) from account_phone
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>

  <select id="selectMaxId" resultType="java.lang.Integer">
    <!--          -->
    select MAX(id) from account_phone
  </select>

  <update id="updateByExampleSelective" parameterType="map">
    <!--          -->
    update account_phone
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.phone != null">
        phone = #{record.phone,jdbcType=VARCHAR},
      </if>
      <if test="record.fee != null">
        fee = #{record.fee,jdbcType=DECIMAL},
      </if>
      <if test="record.status != null">
        status = #{record.status,jdbcType=TINYINT},
      </if>
      <if test="record.bindAccount != null">
        bind_account = #{record.bindAccount,jdbcType=INTEGER},
      </if>
      <if test="record.bindFlow != null">
        bind_flow = #{record.bindFlow,jdbcType=INTEGER},
      </if>
      <if test="record.bindServer != null">
        bind_server = #{record.bindServer,jdbcType=INTEGER},
      </if>
      <if test="record.stime != null">
        stime = #{record.stime,jdbcType=INTEGER},
      </if>
      <if test="record.etime != null">
        etime = #{record.etime,jdbcType=INTEGER},
      </if>
      <if test="record.isSettle != null">
        is_settle = #{record.isSettle,jdbcType=TINYINT},
      </if>
      <if test="record.ctime != null">
        ctime = #{record.ctime,jdbcType=INTEGER},
      </if>
      <if test="record.calloutprefix != null">
        calloutprefix = #{record.calloutprefix,jdbcType=VARCHAR},
      </if>
      <if test="record.istransparent != null">
        istransparent = #{record.istransparent,jdbcType=TINYINT},
      </if>
      <if test="record.transfercaller != null">
        transfercaller = #{record.transfercaller,jdbcType=VARCHAR},
      </if>
      <if test="record.chargeMode != null">
        charge_mode = #{record.chargeMode,jdbcType=TINYINT},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!--          -->
    update account_phone
    set id = #{record.id,jdbcType=INTEGER},
      phone = #{record.phone,jdbcType=VARCHAR},
      fee = #{record.fee,jdbcType=DECIMAL},
      status = #{record.status,jdbcType=TINYINT},
      bind_account = #{record.bindAccount,jdbcType=INTEGER},
      bind_flow = #{record.bindFlow,jdbcType=INTEGER},
      bind_server = #{record.bindServer,jdbcType=INTEGER},
      stime = #{record.stime,jdbcType=INTEGER},
      etime = #{record.etime,jdbcType=INTEGER},
      is_settle = #{record.isSettle,jdbcType=TINYINT},
      ctime = #{record.ctime,jdbcType=INTEGER},
      calloutprefix = #{record.calloutprefix,jdbcType=VARCHAR},
      istransparent = #{record.istransparent,jdbcType=TINYINT},
      transfercaller = #{record.transfercaller,jdbcType=VARCHAR},
      charge_mode = #{record.chargeMode,jdbcType=TINYINT}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.sunll.center.entity.AccountPhone">
    <!--          -->
    update account_phone
    <set>
      <if test="phone != null">
        phone = #{phone,jdbcType=VARCHAR},
      </if>
      <if test="fee != null">
        fee = #{fee,jdbcType=DECIMAL},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=TINYINT},
      </if>
      <if test="bindAccount != null">
        bind_account = #{bindAccount,jdbcType=INTEGER},
      </if>
      <if test="bindFlow != null">
        bind_flow = #{bindFlow,jdbcType=INTEGER},
      </if>
      <if test="bindServer != null">
        bind_server = #{bindServer,jdbcType=INTEGER},
      </if>
      <if test="stime != null">
        stime = #{stime,jdbcType=INTEGER},
      </if>
      <if test="etime != null">
        etime = #{etime,jdbcType=INTEGER},
      </if>
      <if test="isSettle != null">
        is_settle = #{isSettle,jdbcType=TINYINT},
      </if>
      <if test="ctime != null">
        ctime = #{ctime,jdbcType=INTEGER},
      </if>
      <if test="calloutprefix != null">
        calloutprefix = #{calloutprefix,jdbcType=VARCHAR},
      </if>
      <if test="istransparent != null">
        istransparent = #{istransparent,jdbcType=TINYINT},
      </if>
      <if test="transfercaller != null">
        transfercaller = #{transfercaller,jdbcType=VARCHAR},
      </if>
      <if test="chargeMode != null">
        charge_mode = #{chargeMode,jdbcType=TINYINT},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.sunll.center.entity.AccountPhone">
    <!--          -->
    update account_phone
    set phone = #{phone,jdbcType=VARCHAR},
      fee = #{fee,jdbcType=DECIMAL},
      status = #{status,jdbcType=TINYINT},
      bind_account = #{bindAccount,jdbcType=INTEGER},
      bind_flow = #{bindFlow,jdbcType=INTEGER},
      bind_server = #{bindServer,jdbcType=INTEGER},
      stime = #{stime,jdbcType=INTEGER},
      etime = #{etime,jdbcType=INTEGER},
      is_settle = #{isSettle,jdbcType=TINYINT},
      ctime = #{ctime,jdbcType=INTEGER},
      calloutprefix = #{calloutprefix,jdbcType=VARCHAR},
      istransparent = #{istransparent,jdbcType=TINYINT},
      transfercaller = #{transfercaller,jdbcType=VARCHAR},
      charge_mode = #{chargeMode,jdbcType=TINYINT}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>